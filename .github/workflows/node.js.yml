name: Update README with Performance Test Results

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-performance-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22, 24, 26, 26]

    name: Run on Node.js ${{ matrix.node-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run JavaScript loop performance test and save output
        run: node test-loops.js && mv performance-results.txt performance-results-${{ matrix.node-version }}.txt

      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results-${{ matrix.node-version }}
          path: performance-results-${{ matrix.node-version }}.txt

  update-readme:
    runs-on: ubuntu-latest
    needs: run-performance-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all test results
        uses: actions/download-artifact@v4

      - name: Generate Markdown table for README (Sorted Columns)
        run: |
          echo "## JavaScript Loop Performance Test Results" > README.md
          echo "" >> README.md
          echo "**Unit: ms, lower is better.**" >> README.md
          echo "" >> README.md
          echo "| Node.js Version | do...while | while | for | map | reduce | filter | forEach | for...of | for...in |" >> README.md
          echo "|----------------|-----------|-------|-----|-----|--------|--------|---------|---------|---------|" >> README.md

          for version in 16 18 20; do
            row="| $version |"
            declare -A loop_times
            while IFS=, read -r loop time; do
              loop_times[$loop]=$(echo $time | xargs)
            done < performance-results-${version}/performance-results-${version}.txt

            row="$row ${loop_times[do...while]} | ${loop_times[while]} | ${loop_times[for]} | ${loop_times[map]} | ${loop_times[reduce]} | ${loop_times[filter]} | ${loop_times[forEach]} | ${loop_times[for...of]} | ${loop_times[for...in]} |"
            echo "$row" >> README.md
          done

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md
          
          # Check if there are any changes before committing
          if git diff --staged --quiet; then
            echo "No changes to commit. Exiting..."
            exit 0
          fi
          
          git commit -m "Update README with latest loop performance results [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
